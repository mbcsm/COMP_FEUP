import java.util.HashMap;

/* Generated By:JJTree: Do not edit this line. ASTAttributionHead.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public class ASTAttributionHead extends SimpleNode {

  String name = "";

  public ASTAttributionHead(int id) {
    super(id);
  }

  public ASTAttributionHead(Javamm p, int id) {
    super(p, id);
  }

  @Override
  public String getType() throws SemanticException {
    for (String key : SymbolTable.localVariables.keySet()) {
      HashMap<String, Symbol> tempLocalVariables = SymbolTable.localVariables.get(key);
      for (String _key : tempLocalVariables.keySet()) {
        if (tempLocalVariables.get(name) == null)
          break;
        if (tempLocalVariables.get(name).name.equals(name)) {
          return tempLocalVariables.get(name).getType();
        }
      }
    }

    for (String _key : SymbolTable.classVariables.keySet()) {
      if (SymbolTable.classVariables.get(name) == null)
        break;
      if (SymbolTable.classVariables.get(name).name.equals(name)) {
        return SymbolTable.classVariables.get(name).getType();
      }
    }

    for (String key : SymbolTable.parameters.keySet()) {
      HashMap<String, Symbol> tempParameters = SymbolTable.parameters.get(key);
      for (String _key : tempParameters.keySet()) {
        if (tempParameters.get(name) == null)
          break;
        if (tempParameters.get(name).name.equals(name)) {
          return tempParameters.get(name).getType();
        }
      }
    }
    throw new SemanticException("Variable <" + name + "> not defined.");
  }

  public String toString() {
    return name;
  }

}
/*
 * JavaCC - OriginalChecksum=0816c3b9662b5d5ddfb159dbac17077b (do not edit this
 * line)
 */
